{"version":3,"sources":["TaskView.js"],"names":[],"mappingsfile":"TaskView.js","sourcesContent":["\n// load all javascript once the document is ready.\n$(document).ready(function(){\n    String.prototype.isEmpty = function() {\n        return (this.length === 0 || !this.trim());\n    };\n\n    // populate the type drop-down box on the Task View.\n    TaskType();\n    isValidHourMinute();\n    getStartTime();\n    getEndTime();\n    loseFocusOnStartTime();\n    loseFocusOnEndTime();\n    loseFocusOnTaskType();\n    enabledDisabledSaveButton();\n\n});\n\n// SaveButton class to save state of required input fields.\nfunction SaveButton(type,startt,endt) {\n    this.type = type;\n    this.startt = startt;\n    this.endt = endt;\n}\nSaveButton.prototype.getType = function() {\n    return this.type;\n};\nSaveButton.prototype.setType = function(type) {\n    this.type = type;\n};\nSaveButton.prototype.getStartt = function() {\n    return this.startt;\n};\nSaveButton.prototype.setStartt = function(startt) {\n    this.startt = startt;\n};\nSaveButton.prototype.getEndt = function() {\n    return this.endt;\n};\nSaveButton.prototype.setEndt = function(endt) {\n    this.endt = endt;\n};\nSaveButton.prototype.isReady = function() {\n    if (this.type && this.startt && this.endt) {\n        return true;\n    }\n\n    return false;\n};\n\nvar saveButton = new SaveButton(false,false,false);\n\n\n// populate the type drop-down box on the Task View.\nfunction TaskType() {\n    //$('#taskType').empty();\n    //$('#taskType').append(\"<caption>Loading...</caption>\");\n    $.ajax({\n        type: \"GET\",\n        url: \"/get_all_tasks\",\n        contentType: \"application/json; charset=utf8\",\n        dataType: \"json\",\n        success: function(data) {\n            //$('#taskType').empty();\n            //$('#taskType').append(\"<option value='0'>--Select Type--</option>\");\n            $.each(data,function(i,item) {\n                $('#taskType').append(\"<option value=\" + data[i].id + \">\" + data[i].type + \"</option>\");\n            });\n        },\n        complete: function() {\n        }\n    });\n}\n\n// time validation are performed via http://momentjs.com/.\nfunction isValidHourMinute(ttime) {\n\n    var myDateTime = \"1960-10-03 \" + ttime;\n    var formats = [\"YYYY-MM-DD LT\",\"YYYY-MM-DD h:mm:ss A\",\"YYYY-MM-DD HH:mm:ss\",\"YYYY-MM-DD HH:mm\"];\n\n    if (moment(myDateTime, formats, true).isValid()) {\n        return true;\n    }\n\n    return false;\n\n}\n\n// populate start and end time boxes.\n// for more details, see https://github.com/jonthornton/jquery-timepicker#timepicker-plugin-for-jquery\nfunction getStartTime() {\n    $('#startt-search').timepicker({'show2400' : true,\n                             'timeFormat': 'H:i',\n                             'scrollDefault': 'now',\n                             'useSelect' : false });\n}\nfunction getEndTime() {\n    $('#endt').timepicker({'show2400' : true,\n                           'timeFormat': 'H:i',\n                           'scrollDefault': 'now',\n                           'useSelect' : false });\n}\n\n// calculate hours worked and populate the hours worked cell.\nfunction loseFocusOnEndTime() {\n    $(\"#endt\").focusout(function(){\n\n        /**\n         *  parse start and end times\n         * @type {*|jQuery}\n         */\n        var t1Str = $('#startt-search').text($(this)).val();\n        var t1 = t1Str.split(':');\n\n        var t2Str = $('#endt').text($(this)).val();\n        if (!isValidHourMinute(t2Str)) {\n            $('#endt').focus();\n            $('#endt').css('background-color', 'pink');\n\n            saveButton.setEndt(false);\n            enabledDisabledSaveButton();\n\n            return;\n        }\n        else {\n            $('#endt').css('background-color', 'white');\n\n            saveButton.setEndt(true);\n            enabledDisabledSaveButton();\n        }\n        var t2 = t2Str.split(':');\n\n        if (!t1Str.isEmpty() && !t2Str.isEmpty()) {\n            var beginningTime = moment({H: t1[0], s: t1[1]});\n            var endTime = moment({H: t2[0], s: t2[1]});\n            if (!beginningTime.isBefore(endTime)) {\n                $('#endt').focus();\n                $('#endt').css('background-color', 'pink');\n\n                saveButton.setEndt(false);\n                enabledDisabledSaveButton();\n\n                return;\n            }\n            else {\n                $('#endt').css('background-color', 'white');\n\n                saveButton.setEndt(true);\n                enabledDisabledSaveButton();\n            }\n\n            var t1Min = Math.floor(t1[0]) *60 + Math.floor(t1[1]);\n            var t2Min = Math.floor(t2[0]) *60 + Math.floor(t2[1]);\n\n            var diff = (t2Min - t1Min)/60;\n\n            $('#hoursWorked').val(Math.round(diff * 10000 )/10000);\n        }\n    });\n}\n\nfunction loseFocusOnStartTime() {\n    $(\"#startt-search\").focusout(function(){\n        var t1Str = $('#startt-search').text($(this)).val();\n        if (!isValidHourMinute(t1Str)) {\n            $('#startt-search').focus();\n            $('#startt-search').css('background-color', 'pink');\n\n            saveButton.setStartt(false);\n            enabledDisabledSaveButton();\n\n            return;\n        }\n        else {\n            $('#startt-search').css('background-color', 'white');\n\n            saveButton.setStartt(true);\n            enabledDisabledSaveButton();\n        }\n        var t1 = t1Str.split(':');\n\n        var t2Str = $('#endt').text($(this)).val();\n        var t2 = t2Str.split(':');\n\n\n\n        if (!t1Str.isEmpty() && !t2Str.isEmpty()) {\n\n            var beginningTime = moment({H: t1[0], s: t1[1]});\n            var endTime = moment({H: t2[0], s: t2[1]});\n            if (!beginningTime.isBefore(endTime)) {\n                $('#startt-search').focus();\n                $('#startt-search').css('background-color', 'pink');\n\n                saveButton.setStartt(false);\n                enabledDisabledSaveButton();\n\n                return;\n            }\n            else {\n                $('#startt-search').css('background-color', 'white');\n\n                saveButton.setStartt(true);\n                enabledDisabledSaveButton();\n            }\n\n            var t1Min = Math.floor(t1[0]) *60 + Math.floor(t1[1]);\n            var t2Min = Math.floor(t2[0]) *60 + Math.floor(t2[1]);\n\n            var diff = (t2Min - t1Min)/60;\n\n            $('#hoursWorked').val(Math.round(diff * 10000 )/10000);\n        }\n    });\n}\n\nfunction loseFocusOnTaskType() {\n    $(\"#taskType\").change(function () {\n        var v1 = Math.floor($('#taskType').val());\n\n        if (v1 !== 0) {\n            saveButton.setType(true);\n            enabledDisabledSaveButton();\n        } else {\n            saveButton.setType(false);\n            enabledDisabledSaveButton();\n        }\n    });\n}\n\nfunction enabledDisabledSaveButton() {\n    if (saveButton.isReady()) {\n        $(\"#saveButton\").prop('disabled', false);\n    } else {\n        $(\"#saveButton\").prop('disabled', true);\n    }\n}\n\n"],"sourceRoot":"/source/"}